name: Build and deploy nextjs app

on:
  workflow_call:
    inputs:
      BUILD_ENV:
        required: true
        type: string
      IMAGE_PROXY_URL:
        required: true
        type: string
      CDN_URL:
        required: true
        type: string
      NAIS_RESOURCE:
        required: true
        type: string

jobs:
  build:
    name: Bygg
    runs-on: ubuntu-latest
    env:
      FARO_URL: ${{ (inputs.BUILD_ENV == 'prod' && 'https://telemetry.nav.no/collect') || (inputs.BUILD_ENV == 'dev' && 'https://telemetry.ekstern.dev.nav.no/collect') }}
    permissions:
      contents: "write"
      id-token: "write"
      packages: "write"
    timeout-minutes: 10
    outputs:
      docker_image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Bygg og push Docker image
        uses: nais/docker-build-push@1fae4798c79f4af4c3cdbd3fe65e51f8f3ba2368 # v0
        id: docker-build-push
        with:
          team: 'teamdigihot'
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          image_suffix: ${{ inputs.BUILD_ENV }}
          build_args: |
            BUILD_ENV=${{ inputs.BUILD_ENV }}
            IMAGE_PROXY_URL=${{ inputs.IMAGE_PROXY_URL }}
            CDN_URL=${{ inputs.CDN_URL }}
            FARO_URL=${{ env.FARO_URL }}
          build_secrets: |
            NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write
      id-token: write
    timeout-minutes: 10
    steps:
      - name: Sjekk ut koden
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Deploy
        uses: nais/deploy/actions/deploy@e79279e20795c1a03a92e8ae0bad4b770fd4e6d4 # v2
        env:
          CLUSTER: ${{ (inputs.BUILD_ENV == 'prod' && 'prod-gcp') || (inputs.BUILD_ENV == 'dev' && 'dev-gcp') }}
          RESOURCE: ${{ inputs.NAIS_RESOURCE }}
          IMAGE: ${{ needs.build.outputs.docker_image }}

